[project]
authors = [{name = "Sam Van Stroud", email = "sam.van.stroud@cern.ch"}]
description = "Attention for High Energy Physics"
license = { text = "GPL-3.0-or-later" }
readme = "README.md"
name = "hepattn"
requires-python = "== 3.12"
version = "0.2.0"

dependencies = [
    "packaging>=24.1,<25",
    "jupyter>=1.1.1,<2",
    "ipykernel>=6.30.1,<7",
    "wheel>=0.45.1,<0.46",
    "numpy>=2.1.2,<3",
    "scipy>=1.16.2,<2",
    "pytest>=8.4.2,<9",
    "pytest-repeat>=0.9.4,<0.10",
    "pytest-cov>=7.0.0,<8",
    "coverage[toml]>=7.10.6,<8",
    "ruff==0.13.0",
    "pre-commit>=4.3.0,<5",
    "matplotlib>=3.10.6,<4",
    "lightning==2.5.2",
    "comet-ml==3.50.0",
    "pandas>=2.3.2,<3",
    "pyarrow>=21.0.0,<22",
    "jsonargparse[signatures]==4.40.1",
    "torchjd>=0.7.0,<0.8",
    "lion-pytorch>=0.2.3,<0.3",
    "awkward>=2.8.8,<3",
    "uproot>=5.6.5,<6",
    "h5py>=3.14.0,<4",
    "particle>=0.25.4,<0.26",
    "scikit-learn>=1.7.2,<2",
    "onnx>=1.19.0,<2",
    "onnxruntime>=1.22.1,<2",
    "einops>=0.8.1,<0.9",
    "atlas-ftag-tools>=0.2.9,<0.3",
    "ty>=0.0.1a20,<0.0.1a21",
    "atlasify>=0.8.0,<0.9",
]

[dependency-groups]
clic = ["pathos", "vector", "fastjet", "energyflow"] # has problems on isambard
tide = ["numba>=0.61.2"] # has problems on isambard
fa2 = ["flash-attn @ https://github.com/Dao-AILab/flash-attention/releases/download/v2.7.4.post1/flash_attn-2.7.4.post1+cu12torch2.6cxx11abiTRUE-cp312-cp312-linux_x86_64.whl",]

[build-system]
requires = ["scikit-build-core>=0.3.3", "pybind11"]
build-backend = "scikit_build_core.build"

[tool.scikit-build]
wheel.packages = ["src/hepattn", "src/lap1015/src/lap1015"]


[tool.pixi.project]
channels = ["conda-forge", "nvidia", "nodefaults"]
platforms = ["linux-64", "linux-aarch64"]

[tool.pixi.pypi-dependencies]
hepattn = { path = ".", editable = true }

[tool.pixi.pypi-options]
no-build-isolation = ["flash-attn"]
extra-index-urls = ["https://download.pytorch.org/whl/cu128"]

[tool.pixi.feature.gpu.pypi-dependencies]
torch = { version = "==2.7.1", index = "https://download.pytorch.org/whl/cu128"}

[tool.pixi.feature.cpu.pypi-dependencies]
torch = { version = "==2.7.1", index = "https://download.pytorch.org/whl/cpu" }

[tool.pixi.environments]
default = { features = ["gpu", "fa2"] }
isambard = { features = ["gpu"] }
cpu = { features = ["cpu"] }
clic = { features = ["clic"] }
tide = { features = ["tide"] }
ci = { features = ["cpu", "clic", "tide"]}

[tool.pixi.system-requirements]
libc = "2.28"
cuda = "12.3"

[tool.pixi.dependencies]
gxx = ">=14.3.0,<14.4"
git = ">=2.51.0,<3"
git-lfs = ">=3.7.0,<4"
ninja = ">=1.13.1,<2"
cuda = "12.8.*"

[tool.pixi.tasks.test]
cmd = "pytest"

[tool.pixi.tasks.test-ci]
cmd = "pytest -m 'not gpu and not requiresdata' --cov=src --cov-report=xml --cov-report=term-missing"

[tool.pixi.tasks.test-unit-ci]
cmd = "pytest --ignore=tests/experiments/ -m 'not gpu and not requiresdata' --cov=src --cov-report=xml --cov-report=term-missing"

[tool.pixi.tasks.test-integration-ci]
cmd = "pytest tests/experiments/ -m 'not gpu and not requiresdata' --cov=src --cov-report=xml --cov-report=term-missing"


[tool.ruff]
src = ["src"]
line-length = 150
preview = true
#format.skip-magic-trailing-comma = true

[tool.ruff.lint]
select = ["ALL"]
ignore = ["G", "D100", "D101", "D102", "D103",  "D104", "D105", "D106", "D107", "D205", "ANN", "PLW", "FBT", "EM",  "PLR2004", "PT018", "COM812", "CPY001", "TRY003", "S101", "N812", "PLR0913", "PLR0917", "DOC201", "INP001", "PLR6301", "T201", "TD002", "TD003", "FIX002", "ARG002", "C901", "PLR0914", "PLR0912", "PLR0915", "PT011", "ERA001", "PGH004", "PLC0206", "S311", "PLR0911", "PLR6104", "S404", "S603", "B028", "PLR1702",]
#isort.split-on-trailing-comma=false
pydocstyle.convention = "google"

[tool.ruff.lint.per-file-ignores]
"*.ipynb" = ["E501"]

[tool.ty.rules]
missing-argument = "ignore" #Â for now as kwarg unpacking is not supported


[tool.pytest.ini_options]
filterwarnings = ["ignore:.*distutils Version classes are deprecated. Use packaging.version instead.*:DeprecationWarning"]
markers = ["gpu: mark test to run on GPU", "requiresdata: mark test that requires data not present in the repository"]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/lap1015/*",
    "*/experiments/*",
    "*.ipynb"
]

[tool.coverage.report]
exclude_lines = [
    "raise AssertionError",
    "raise NotImplementedError",
]
